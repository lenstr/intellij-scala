{
  parserClass = "org.jetbrains.sbt.shell.grammar.SbtShellParser"
  extends = "com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix = "SbtShell"
  psiImplClassSuffix = "Impl"
  psiPackage = "org.jetbrains.sbt.shell.grammar"
  psiImplPackage = "org.jetbrains.sbt.shell.grammar.impl"

  elementTypeHolderClass = "org.jetbrains.sbt.shell.grammar.SbtShellTypes"
  elementTypeClass = "org.jetbrains.sbt.shell.SbtShellElementType"
  tokenTypeClass = "org.jetbrains.sbt.shell.SbtShellTokenType"

  tokens = [
    COLON=":"
    DOUBLE_COLON="::"
    SEMICOLON=";"
    SLASH="/"
    OPEN_BRACE="{"
    CLOSE_BRACE="}"
    space="regexp:\s+"
    id="regexp:\w+" // TODO scala identifier
  ]
}

private sbtShellLine ::= (thing | things)

private thing ::= scopedKey | command

private things ::= (SEMICOLON thing)+

scopedKey ::= (OPEN_BRACE uri CLOSE_BRACE)? (projectId SLASH)? (config COLON)? (intask DOUBLE_COLON)? key

// FIXME proper uri syntax
uri ::= id

projectId ::= id

config ::= id

intask ::= id

key ::= id

// TODO explicitly support builtin commands, have fallback syntax for the rest
command ::= id (space id)*